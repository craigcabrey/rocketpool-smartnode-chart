global:
  main:
    network: holesky
  checkpointSync:
    enabled: false

rocketPool:
  bitflyNodeMetrics:
    bitflyEndpoint: https://beaconcha.in/api/v1/client/metrics
    bitflyMachineName: Smartnode
    bitflySecret: ""
  rescueNode:
    enabled: false
    username:
    password:
  smoothingPool: false

mevBoost:
  enabled: false
  relays: []
  port: 18550

smartNode:
  image:
    repository: docker.io/rocketpool/smartnode
    tag: ""

  metrics:
    enabled: true
    port: 9102

  persistence:
    enabled: true

watchtower:
  enabled: false

  image:
    repository: docker.io/rocketpool/smartnode
    tag: ""

  metrics:
    enabled: true
    port: 9102

  maxFeeOverride: 200
  prioFeeOverride: 3

# See documentation for options:
# https://github.com/ethpandaops/ethereum-helm-charts
primaryNode:
  enabled: true

  global:
    main:
      engineEndpoint: http://{{ .Release.Name }}-rocketpool-primary-execution:8551
      rpcEndpoint: http://{{ .Release.Name }}-rocketpool-primary-execution:8545
      beaconEndpoint: http://{{ .Release.Name }}-rocketpool-primary-beacon:5052

  # Execution Layer clients
  besu:
    nameOverride: rocketpool-primary-execution
    defaultCommandTemplate: |
      - sh
      - -ac
      - >
        exec besu
        --data-path=/data
        --nat-method=KUBERNETES
        --rpc-http-enabled
        --rpc-http-host=0.0.0.0
        --rpc-http-port={{ .Values.httpPort }}
        --rpc-http-cors-origins=*
        --rpc-ws-enabled
        --rpc-ws-host=0.0.0.0
        --rpc-ws-port={{ .Values.wsPort }}
        --host-allowlist=*
        --engine-jwt-secret=/data/jwt.hex
        --engine-rpc-port={{ .Values.authPort }}
        --engine-host-allowlist=*
        --metrics-enabled
        --metrics-host=0.0.0.0
        --metrics-port={{ .Values.metricsPort }}
        --data-storage-format=bonsai
        --sync-mode=X_SNAP
        --Xsnapsync-synchronizer-flat-db-healing-enabled=true
        --fast-sync-min-peers=3
        --rpc-http-max-active-connections=1024
      {{- range .Values.extraArgs }}
        {{ tpl . $ }}
      {{- end }}

    authPort: 8551
    httpPort: 8545
    metricsPort: 9545
    p2pPort: 30303
    wsPort: 8546

    rbac:
      create: false
    serviceAccount:
      create: false
  erigon:
    nameOverride: rocketpool-primary-execution
    rbac:
      create: false
    serviceAccount:
      create: false
  ethereumjs:
    nameOverride: rocketpool-primary-execution
    rbac:
      create: false
    serviceAccount:
      create: false
  geth:
    nameOverride: rocketpool-primary-execution
    rbac:
      create: false
    serviceAccount:
      create: false
  nethermind:
    nameOverride: rocketpool-primary-execution
    rbac:
      create: false
    serviceAccount:
      create: false
  reth:
    nameOverride: rocketpool-primary-execution
    rbac:
      create: false
    serviceAccount:
      create: false

  # Consensus Layer clients
  grandine:
    nameOverride: rocketpool-primary-beacon
    rbac:
      create: false
    serviceAccount:
      create: false
  lighthouse:
    nameOverride: rocketpool-primary-beacon
    image:
      tag: latest-modern

    httpPort: 5052
    metricsPort: 5054
    p2pPort: 9001

    rbac:
      create: false
    serviceAccount:
      create: false
  lodestar:
    nameOverride: rocketpool-primary-beacon
    rbac:
      create: false
    serviceAccount:
      create: false
  nimbus:
    nameOverride: rocketpool-primary-beacon
    rbac:
      create: false
    serviceAccount:
      create: false
  prysm:
    nameOverride: rocketpool-primary-beacon
    rbac:
      create: false
    serviceAccount:
      create: false
  teku:
    nameOverride: rocketpool-primary-beacon
    rbac:
      create: false
    serviceAccount:
      create: false

fallbackNode:
  enabled: false

  # FIXME: overwrites the primary node global
  global:
    main:
      engineEndpoint: http://{{ .Release.Name }}-rocketpool-fallback-execution:8551
      rpcEndpoint: http://{{ .Release.Name }}-rocketpool-fallback-execution:8545
      beaconEndpoint: http://{{ .Release.Name }}-rocketpool-fallback-beacon:5052

  # Execution Layer clients
  besu:
    nameOverride: rocketpool-fallback-execution
    defaultCommandTemplate: |
      - sh
      - -ac
      - >
        exec besu
        --data-path=/data
        --nat-method=KUBERNETES
        --rpc-http-enabled
        --rpc-http-host=0.0.0.0
        --rpc-http-port={{ .Values.httpPort }}
        --rpc-http-cors-origins=*
        --rpc-ws-enabled
        --rpc-ws-host=0.0.0.0
        --rpc-ws-port={{ .Values.wsPort }}
        --host-allowlist=*
        --engine-jwt-secret=/data/jwt.hex
        --engine-rpc-port={{ .Values.authPort }}
        --engine-host-allowlist=*
        --metrics-enabled
        --metrics-host=0.0.0.0
        --metrics-port={{ .Values.metricsPort }}
        --data-storage-format=bonsai
        --sync-mode=X_SNAP
        --Xsnapsync-synchronizer-flat-db-healing-enabled=true
        --fast-sync-min-peers=3
        --rpc-http-max-active-connections=1024
      {{- range .Values.extraArgs }}
        {{ tpl . $ }}
      {{- end }}

    authPort: 8551
    httpPort: 8545
    metricsPort: 9545
    p2pPort: 30303
    wsPort: 8546

    rbac:
      create: false
    serviceAccount:
      create: false
  erigon:
    nameOverride: rocketpool-fallback-execution
    rbac:
      create: false
    serviceAccount:
      create: false
  ethereumjs:
    nameOverride: rocketpool-fallback-execution
    rbac:
      create: false
    serviceAccount:
      create: false
  geth:
    nameOverride: rocketpool-fallback-execution
    rbac:
      create: false
    serviceAccount:
      create: false
  nethermind:
    nameOverride: rocketpool-fallback-execution
    rbac:
      create: false
    serviceAccount:
      create: false
  reth:
    nameOverride: rocketpool-fallback-execution
    rbac:
      create: false
    serviceAccount:
      create: false

  # Consensus Layer clients
  grandine:
    nameOverride: rocketpool-fallback-beacon
    rbac:
      create: false
    serviceAccount:
      create: false
  lighthouse:
    nameOverride: rocketpool-fallback-beacon
    image:
      tag: latest-modern

    httpPort: 5052
    metricsPort: 5054
    p2pPort: 9001

    rbac:
      create: false
    serviceAccount:
      create: false
  lodestar:
    nameOverride: rocketpool-fallback-beacon
    rbac:
      create: false
    serviceAccount:
      create: false
  nimbus:
    nameOverride: rocketpool-fallback-beacon
    rbac:
      create: false
    serviceAccount:
      create: false
  prysm:
    nameOverride: rocketpool-fallback-beacon
    rbac:
      create: false
    serviceAccount:
      create: false
  teku:
    nameOverride: rocketpool-fallback-beacon
    rbac:
      create: false
    serviceAccount:
      create: false

# Validators

lighthouse:
  enabled: false
  nameOverride: rocketpool-validator
  mode: validator
  defaultValidatorCommandTemplate: |
    - sh
    - -ac
    - >
      exec lighthouse
      --network {{ .Values.global.main.network }}
      --datadir /data/data/validators/lighthouse
      validator
      --init-slashing-protection
      --logfile-max-number 0
      --beacon-nodes http://{{ .Release.Name }}-rocketpool-primary-beacon:5052
      --suggested-fee-recipient $(cat /data/data/validators/rp-fee-recipient.txt)
      --enable-doppelganger-protection
      --metrics
      --metrics-address 0.0.0.0
      --metrics-port {{ .Values.metricsPort }}
    {{- range .Values.extraArgs }}
      {{ tpl . $ }}
    {{- end }}
  rbac:
    create: false
  serviceAccount:
    create: false

  initContainers:
    - name: wait-for-setup
      image: busybox
      command:
        - sh
        - -c
        - while [ ! -f /data/setup-complete ]; do echo "Waiting for setup..."; sleep 5; done
      volumeMounts:
        - name: storage
          mountPath: /data
  # FIXME: maybe use default
  metricsPort: 9101

prysm:
  enabled: false
  nameOverride: rocketpool-validator
  mode: validator
  rbac:
    create: false
  serviceAccount:
    create: false

  initContainers:
    - name: wait-for-setup
      image: busybox
      command:
        - sh
        - -c
        - while [ ! -f /data/setup-complete ]; do echo "Waiting for setup..."; sleep 5; done
      volumeMounts:
        - name: storage
          mountPath: /data
 
networkPolicy:
  create: false

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
