{{- if .Values.watchtower.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rocketpool.fullname" . }}-watchtower
  labels:
    app.kubernetes.io/component: watchtower
    app.kubernetes.io/part-of: rocketpool
    {{- include "rocketpool.labels" . | nindent 4 }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: watchtower
      app.kubernetes.io/part-of: rocketpool
      {{- include "rocketpool.labels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '{{ .Values.watchtower.metricsPort }}'
      labels:
        app.kubernetes.io/component: watchtower
        app.kubernetes.io/part-of: rocketpool
        {{- include "rocketpool.labels" . | nindent 8 }}
        {{- .Values.watchtower.podLabels | toYaml | nindent 8 }}
    spec:
      initContainers:
        - name: wait-for-setup
          image: busybox
          command:
            - sh
            - -c
            - while [ ! -f /data/setup-complete ]; do echo "Waiting for setup..."; sleep 5; done
          volumeMounts:
            - name: data
              mountPath: /data
      containers:
        - name: smartnode
          image: "{{ .Values.smartNode.image.repository }}:v{{ .Values.smartNode.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          args:
            - --metricsAddress
            - 0.0.0.0
            - --metricsPort
            - '{{ .Values.watchtower.metricsPort }}'
            - --settings
            - /data/user-settings.yml
            - watchtower
          ports:
            - name: metrics
              containerPort: {{ .Values.watchtower.metricsPort }}
              protocol: TCP
          volumeMounts:
            - mountPath: /data/user-settings.yml
              subPath: user-settings.yaml
              name: config
            - mountPath: /data
              name: data
      restartPolicy: Always
      securityContext:
        fsGroup: 10001
        runAsNonRoot: true
        runAsGroup: 10001
        runAsUser: 10001
      volumes:
        - name: config
          configMap:
            defaultMode: 420
            name: smartnode-config
        - name: data
          persistentVolumeClaim:
            claimName: rocketpool-smartnode-data
{{- end }}
