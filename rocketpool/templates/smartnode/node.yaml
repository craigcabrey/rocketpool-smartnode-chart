apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rocketpool.fullname" . }}-smartnode
  labels:
    app.kubernetes.io/component: smartnode
    app.kubernetes.io/name: smartnode
    app.kubernetes.io/part-of: rocketpool
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: smartnode
      app.kubernetes.io/name: smartnode
      app.kubernetes.io/part-of: rocketpool
  template:
    metadata:
      annotations:
        prometheus.io/scrape: '{{ .Values.smartNode.metrics.enabled }}'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '{{ .Values.smartNode.metrics.port }}'
      labels:
        app.kubernetes.io/component: smartnode
        app.kubernetes.io/name: smartnode
        app.kubernetes.io/part-of: rocketpool
    spec:
      serviceAccountName: smartnode
      initContainers:
        - name: wait-for-setup
          image: busybox
          command:
            - sh
            - -c
            - while [ ! -f /data/pre-setup-complete ]; do echo "Waiting for setup..."; sleep 5; done
          volumeMounts:
            - name: data
              mountPath: /data
        - name: chown-data
          image: busybox
          command:
            - chown
            - -R
            - 10001:10001
            - /data
          volumeMounts:
            - name: data
              mountPath: /data
      containers:
        - name: smartnode
          image: '{{ .Values.smartNode.image.repository }}:v{{ .Values.smartNode.image.tag | default .Chart.AppVersion }}'
          imagePullPolicy: IfNotPresent
          args:
            - --metricsAddress
            - 0.0.0.0
            - --metricsPort
            - '{{ .Values.smartNode.metrics.port }}'
            - --settings
            - /data/user-settings.yml
            - node
          env:
            - name: PATH
              value: /scripts:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - /scripts/post-start.sh
          ports:
            - name: metrics
              containerPort: {{ .Values.smartNode.metrics.port }}
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /data/user-settings.yml
              subPath: user-settings.yaml
            - name: data
              mountPath: /data
            - name: scripts
              mountPath: /scripts
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: config
          configMap:
            defaultMode: 420
            name: smartnode-config
        - name: data
          persistentVolumeClaim:
            claimName: rocketpool-smartnode-data
        - name: scripts
          configMap:
            defaultMode: 0755
            name: smartnode-scripts
